contract {
    storage is ledger
    operations is operations
    entries are deposit, transfer and withdraw
}

let ledger: map address nat = [*:0] -- Default value is zero
let operations: operations = []

function deposit(currency: currency, amount: tez) {
    ledger[sender] += amount
}

function transfer(who: address, amount: tez) {
    require {
        ledger[sender] >= amount -- Insufficient transferred amount
    }

    ledger[sender] -= amount
    ledger[who] += amount
}

function withdraw(amount : tez) {
    require {
        ledger[sender] >= amount -- Insufficient transferred amount
    }

    ledger[sender] -= amount

    -- Append a new transfer to the current operations
    operations += transfer sender amount
}
